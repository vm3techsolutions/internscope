#!/usr/bin/env node
"use strict";
/* eslint-disable no-console */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
require('dotenv').config();
const arg_1 = __importDefault(require("arg"));
const generate_1 = require("./generate");
const format_error_1 = require("./util/format-error");
// Show usage and exit with code
function help(code) {
    console.log(`Usage:
  
  react-dropify generate
  
  `);
    process.exit(code);
}
// Get CLI arguments
const [, , cmd] = process.argv;
const args = (0, arg_1.default)({
    // types
    '--dir': String,
    // aliases
    '-d': '--dir'
}, { permissive: true });
// CLI commands
const cmds = {
    generate: generate_1.main
};
// Run CLI
try {
    // Run command or show usage for unknown command
    cmds[cmd]
        ? cmds[cmd](args)
            .then(() => {
            process.exit(0);
        })
            .catch((error) => {
            console.error((0, format_error_1.formatError)(error));
            process.exit(1);
        })
        : help(0);
}
catch (e) {
    console.error((0, format_error_1.formatError)(e).message);
    process.exit(1);
}
