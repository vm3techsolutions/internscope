"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBGsdkConfig = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const zod_1 = require("zod");
const configSchema = zod_1.z.object({
    domain: zod_1.z.string(),
    accessToken: zod_1.z.string()
});
const getBGsdkConfig = (directoryPath) => {
    const bgsdkConfigJSPath = path_1.default.join(directoryPath, 'config.js');
    let rawConfig = {};
    if (fs_1.default.existsSync(bgsdkConfigJSPath)) {
        rawConfig = require(bgsdkConfigJSPath);
    }
    else {
        throw new Error(`Could not find config.js in ${directoryPath}`);
    }
    const parsedConfig = configSchema.parse(rawConfig);
    return parsedConfig;
};
exports.getBGsdkConfig = getBGsdkConfig;
