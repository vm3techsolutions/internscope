import { GraphQLClient } from 'graphql-request';
export declare type StandardStorefrontClientProps = {
    domain: string;
    accessToken: string;
};
export declare const createStandardStorefrontClient: ({ domain, accessToken }: StandardStorefrontClientProps) => {
    client: GraphQLClient;
    _CreateCart(variables?: import("./generated").Exact<{
        [key: string]: never;
    }> | undefined, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._CreateCartMutation>;
    _CreateCartWithLines(variables: import("./generated").Exact<{
        lines: import("./generated").CartLineInput | import("./generated").CartLineInput[];
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._CreateCartWithLinesMutation>;
    _AddLineItem(variables: import("./generated").Exact<{
        cartId: string;
        lines: import("./generated").CartLineInput | import("./generated").CartLineInput[];
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._AddLineItemMutation>;
    _UpdateLineItem(variables: import("./generated").Exact<{
        cartId: string;
        lines: import("./generated").CartLineUpdateInput | import("./generated").CartLineUpdateInput[];
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._UpdateLineItemMutation>;
    _RemoveLineItem(variables: import("./generated").Exact<{
        cartId: string;
        lineIds: string | string[];
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._RemoveLineItemMutation>;
    _CreateCustomer(variables: import("./generated").Exact<{
        input: import("./generated").CustomerCreateInput;
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._CreateCustomerMutation>;
    _FetchCart(variables: import("./generated").Exact<{
        id: string;
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._FetchCartQuery>;
    _GetProductByHandle(variables: import("./generated").Exact<{
        handle: string;
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._GetProductByHandleQuery>;
    _GetAllProducts(variables?: import("./generated").Exact<{
        startAfter?: string | null | undefined;
        pageSize?: number | null | undefined;
    }> | undefined, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._GetAllProductsQuery>;
    _GetProductsOnCollection(variables: import("./generated").Exact<{
        startAfter?: string | null | undefined;
        pageSize?: number | null | undefined;
        id: string;
    }>, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._GetProductsOnCollectionQuery>;
    _GetCollections(variables?: import("./generated").Exact<{
        [key: string]: never;
    }> | undefined, requestHeaders?: import("graphql-request/dist/types.dom").Headers | string[][] | Record<string, string> | undefined): Promise<import("./generated")._GetCollectionsQuery>;
};
export declare type StandardStorefrontClient = ReturnType<typeof createStandardStorefrontClient>;
