import * as React from "react";
import { getSlideIndex, makeUseContext } from "../utils.js";
const LightboxStateContext = React.createContext(null);
export const useLightboxState = makeUseContext("useLightboxState", "LightboxStateContext", LightboxStateContext);
const reducer = (slidesCount) => (state, action) => {
    const increment = (action === null || action === void 0 ? void 0 : action.increment) || 0;
    const globalIndex = state.globalIndex + increment;
    const currentIndex = getSlideIndex(globalIndex, slidesCount);
    const animationDuration = (action === null || action === void 0 ? void 0 : action.duration) || 0;
    return {
        globalIndex,
        currentIndex,
        animation: action,
        animationDuration,
    };
};
export function LightboxStateProvider({ initialIndex, slidesCount, children }) {
    const memoizedReducer = React.useMemo(() => reducer(slidesCount), [slidesCount]);
    const [state, dispatch] = React.useReducer(memoizedReducer, {
        currentIndex: initialIndex,
        globalIndex: initialIndex,
        animationDuration: 0,
    });
    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);
    return React.createElement(LightboxStateContext.Provider, { value: context }, children);
}
