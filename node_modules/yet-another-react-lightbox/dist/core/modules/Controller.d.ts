import * as React from "react";
import { ComponentProps, ContainerRect } from "../../types.js";
import { SubscribeSensors } from "../hooks/index.js";
import { LightboxStateAction } from "../contexts/index.js";
import { ACTION_CLOSE, ACTION_NEXT, ACTION_PREV, ACTION_SWIPE, YARL_EVENT_BACKDROP_CLICK } from "../consts.js";
export type NavigationAction = {
    count?: number;
};
declare module "../" {
    interface EventTypes {
        [ACTION_PREV]: NavigationAction;
        [ACTION_NEXT]: NavigationAction;
        [ACTION_SWIPE]: LightboxStateAction;
        [ACTION_CLOSE]: void;
        [YARL_EVENT_BACKDROP_CLICK]: void;
    }
}
export type ControllerContextType = {
    getLightboxProps: () => ComponentProps;
    subscribeSensors: SubscribeSensors<HTMLDivElement>;
    transferFocus: () => void;
    containerRect: ContainerRect;
    containerRef: React.RefObject<HTMLDivElement>;
    setCarouselRef: React.Ref<HTMLDivElement>;
};
export declare const useController: () => ControllerContextType;
export declare function Controller({ children, ...props }: ComponentProps): JSX.Element;
export declare const ControllerModule: import("../../types.js").Module;
